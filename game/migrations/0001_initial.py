# Generated by Django 4.1 on 2022-09-19 11:08

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(help_text='인물 이름', max_length=255)),
                ('Comment', models.CharField(blank=True, help_text='인물 설명', max_length=255, null=True)),
                ('HP', models.IntegerField(default=100, help_text='체력')),
                ('MP', models.IntegerField(default=100, help_text='정신력')),
                ('Relation', models.JSONField(default=dict, help_text='{"제퍼슨" : {"fear" : 50, "love" : 10}, "나나" : {"fear" : 20, "love" : 50}}')),
                ('Picture', models.ImageField(blank=True, help_text='이미지 삽화', null=True, upload_to='characters')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, help_text='파일명', max_length=255, null=True)),
                ('uploadedFile', models.FileField(upload_to='Movie')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_eval', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.IntegerField(default=0, help_text='장면 고유 번호', primary_key=True, serialize=False)),
                ('Name', models.CharField(blank=True, help_text='장면 이름', max_length=255, null=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('History', models.ForeignKey(blank=True, help_text='이전 장면', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_scene', to='game.scene')),
                ('NextScene_1', models.ForeignKey(blank=True, help_text='1번 다음 장면', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='first_next_scene', to='game.scene')),
                ('NextScene_2', models.ForeignKey(blank=True, help_text='2번 다음 장면', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='second_next_scene', to='game.scene')),
                ('NextScene_3', models.ForeignKey(blank=True, help_text='3번 다음 장면', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='third_next_scene', to='game.scene')),
                ('NextScene_4', models.ForeignKey(blank=True, help_text='4번 다음 장면', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forth_next_scene', to='game.scene')),
            ],
        ),
        migrations.CreateModel(
            name='Speech_to_Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, help_text='파일명', max_length=255, null=True)),
                ('uploadedFile', models.FileField(upload_to='Speech')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Response', models.JSONField(blank=True, default=dict, help_text='{"text":"Hi I am"}', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Text_reader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, help_text='이름', max_length=255, null=True)),
                ('Text', models.CharField(blank=True, help_text='텍스트', max_length=255, null=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Response', models.JSONField(blank=True, default=dict, help_text='{"happy":12.5, "sad":25}', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scene_text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(default='제목', help_text='제목', max_length=255)),
                ('Narrative', models.TextField(blank=True, help_text='내용', max_length=8192, null=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Scene', models.ForeignKey(help_text='장면', on_delete=django.db.models.deletion.CASCADE, to='game.scene')),
            ],
        ),
        migrations.CreateModel(
            name='Scene_picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Picture', models.ImageField(blank=True, help_text='삽화', null=True, upload_to='scene')),
                ('Name', models.CharField(default='씬 번호', help_text='이미지 이름', max_length=255)),
                ('Comment', models.CharField(blank=True, help_text='코멘트', max_length=255, null=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Scene', models.ForeignKey(help_text='장면', on_delete=django.db.models.deletion.CASCADE, to='game.scene')),
            ],
        ),
        migrations.CreateModel(
            name='Question_Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(default='씬 번호', help_text='제목', max_length=255)),
                ('Question', models.CharField(help_text='질문', max_length=1024)),
                ('Player_Answer', models.CharField(blank=True, help_text='플레이어 응답', max_length=1024, null=True)),
                ('Answer_Number', models.IntegerField(blank=True, default=0, help_text='AI가 분석한 응답 데이터, optimism : 1, negative : 2, sadness : 3, joy : 4, love : 5, anger : 6, fear : 7, surprise : 8', null=True)),
                ('Result_list', models.JSONField(default=dict, help_text='{"1":{"f":["마음을 열었다"],"i":["편지"],"r":[{"제퍼슨":{"fear":-5,"love":20}}, {"나나":{"fear":5, "love":-10}} ] }, "2" : ~~ }')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Scene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.scene')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(help_text='아이템 이름', max_length=255)),
                ('Comment', models.CharField(blank=True, help_text='아이템설명', max_length=255, null=True)),
                ('Count', models.IntegerField(default=0, help_text='사용 횟수')),
                ('Max_Count', models.IntegerField(default=9999, help_text='최대 사용 횟수(제한이 있는 경우)')),
                ('Usable', models.BooleanField(default=True, help_text='사용 가능 여부')),
                ('Picture', models.ImageField(blank=True, help_text='이미지 삽화', null=True, upload_to='item')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Owner', models.ForeignKey(blank=True, help_text='소유주', null=True, on_delete=django.db.models.deletion.CASCADE, to='game.character')),
                ('Scene', models.ForeignKey(help_text='어느 장면에서 얻는 아이템인가?', on_delete=django.db.models.deletion.CASCADE, to='game.scene')),
            ],
        ),
        migrations.CreateModel(
            name='Fact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(help_text='수집한 증거  이름', max_length=255)),
                ('Comment', models.CharField(blank=True, help_text='수집한 증거 설명', max_length=255, null=True)),
                ('Picture', models.ImageField(blank=True, help_text='이미지 삽화', null=True, upload_to='fact')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Owner', models.ForeignKey(blank=True, help_text='소유주', null=True, on_delete=django.db.models.deletion.CASCADE, to='game.character')),
                ('Scene', models.ForeignKey(help_text='어느 장면에서 얻는 증거인가?', on_delete=django.db.models.deletion.CASCADE, to='game.scene')),
            ],
        ),
        migrations.CreateModel(
            name='Face_reader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, help_text='파일명', max_length=255, null=True)),
                ('uploadedFile', models.FileField(upload_to='Face')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Response', models.JSONField(blank=True, default=dict, help_text='{"happy":12.5, "sad":20}', null=True)),
                ('movie', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Diverges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(default='분기점', help_text='분기점 이름', max_length=255)),
                ('Comment', models.CharField(blank=True, help_text='코멘트', max_length=255, null=True)),
                ('Checking_list', models.JSONField(default=dict, help_text='1,2,3,4 분기를 순서대로 확인하여 가장 먼저 맞는 분기로 진행. 만약 1,2,3이 전부 해당하지 않으면 자동으로 4번 분기로 진행. 작성법 예시 : {"1":{"i":["권총","밧줄"],"f":["그것을 알아냈다","저것도 알아냈다"],"r":[{"제퍼슨":"fear"},{"나나":"love"}] },"2":{"i":["권총"],"f":["이것을 알아냈다"],"r":[{"제퍼슨":"love"}] },  }')),
                ('Option', models.IntegerField(blank=True, default=0, help_text='결정된 분기점 번호', null=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Scene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.scene')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_evaluater', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
